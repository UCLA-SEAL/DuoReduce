// /home/yqiu054/circt/llvm/build/bin/mlir-opt --convert-cf-to-llvm 73534.mlir > 73534.out 


73534.mlir:5:8: error: 'vector.mask' op folder produced a value of incorrect type: 'vector<27xi1>', expected: 'vector<10xi1>'
  %7 = vector.mask %cst_8 { vector.mask %cst_6 { vector.multi_reduction <and>, %cst_6, %cst_6 [] : vector<10xi1> to vector<10xi1> } : vector<10xi1> -> vector<10xi1> } : vector<27xi1> -> vector<27xi1>
       ^
73534.mlir:5:8: note: see current operation: 
%3 = "vector.mask"(%1) ({
  "vector.yield"(<<NULL VALUE>>) : (<<NULL TYPE>>) -> ()
}) : (vector<27xi1>) -> vector<27xi1>
mlir-opt: /home/yqiu054/circt/llvm/mlir/lib/IR/Operation.cpp:624: void checkFoldResultTypes(mlir::Operation*, llvm::SmallVectorImpl<mlir::OpFoldResult>&): Assertion `false && "incorrect fold result type"' failed.
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump:
0.      Program arguments: /home/yqiu054/circt/llvm/build/bin/mlir-opt --convert-cf-to-llvm 73534.mlir
 #0 0x000055f821483daf llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x15c5daf)
 #1 0x000055f821480e04 SignalHandler(int) Signals.cpp:0:0
 #2 0x00007fa815e12420 __restore_rt (/lib/x86_64-linux-gnu/libpthread.so.0+0x14420)
 #3 0x00007fa8158df00b raise (/lib/x86_64-linux-gnu/libc.so.6+0x4300b)
 #4 0x00007fa8158be859 abort (/lib/x86_64-linux-gnu/libc.so.6+0x22859)
 #5 0x00007fa8158be729 (/lib/x86_64-linux-gnu/libc.so.6+0x22729)
 #6 0x00007fa8158cffd6 (/lib/x86_64-linux-gnu/libc.so.6+0x33fd6)
 #7 0x000055f824428bbf checkFoldResultTypes(mlir::Operation*, llvm::SmallVectorImpl<mlir::OpFoldResult>&) (.part.0) Operation.cpp:0:0
 #8 0x000055f82442df9c mlir::Operation::fold(llvm::ArrayRef<mlir::Attribute>, llvm::SmallVectorImpl<mlir::OpFoldResult>&) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x456ff9c)
 #9 0x000055f82442e318 mlir::Operation::fold(llvm::SmallVectorImpl<mlir::OpFoldResult>&) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x4570318)
#10 0x000055f82435bebf mlir::OpBuilder::tryFold(mlir::Operation*, llvm::SmallVectorImpl<mlir::Value>&) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x449debf)
#11 0x000055f8242c6e8b (anonymous namespace)::OperationLegalizer::legalize(mlir::Operation*, mlir::ConversionPatternRewriter&) DialectConversion.cpp:0:0
#12 0x000055f8242c7947 (anonymous namespace)::OperationConverter::convertOperations(llvm::ArrayRef<mlir::Operation*>, llvm::function_ref<void (mlir::Diagnostic&)>) DialectConversion.cpp:0:0
#13 0x000055f8242c9db4 mlir::applyPartialConversion(mlir::Operation*, mlir::ConversionTarget const&, mlir::FrozenRewritePatternSet const&, llvm::DenseSet<mlir::Operation*, llvm::DenseMapInfo<mlir::Operation*, void>>*) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x440bdb4)
#14 0x000055f82383defb (anonymous namespace)::ConvertControlFlowToLLVM::runOnOperation() ControlFlowToLLVM.cpp:0:0
#15 0x000055f824221dce mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x4363dce)
#16 0x000055f8242222aa mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x43642aa)
#17 0x000055f824222a64 mlir::PassManager::run(mlir::Operation*) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x4364a64)
#18 0x000055f824213823 performActions(llvm::raw_ostream&, std::shared_ptr<llvm::SourceMgr> const&, mlir::MLIRContext*, mlir::MlirOptMainConfig const&) MlirOptMain.cpp:0:0
#19 0x000055f824214da4 processBuffer(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::MlirOptMainConfig const&, mlir::DialectRegistry&, llvm::ThreadPool*) MlirOptMain.cpp:0:0
#20 0x000055f824214f54 mlir::LogicalResult llvm::function_ref<mlir::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>::callback_fn<mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&)::'lambda'(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>(long, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&) MlirOptMain.cpp:0:0
#21 0x000055f824311b04 mlir::splitAndProcessBuffer(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::function_ref<mlir::LogicalResult (std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, llvm::raw_ostream&)>, llvm::raw_ostream&, bool, bool) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x4453b04)
#22 0x000055f82420d3b7 mlir::MlirOptMain(llvm::raw_ostream&, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer>>, mlir::DialectRegistry&, mlir::MlirOptMainConfig const&) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x434f3b7)
#23 0x000055f8242150a1 mlir::MlirOptMain(int, char**, llvm::StringRef, llvm::StringRef, mlir::DialectRegistry&) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x43570a1)
#24 0x000055f824215526 mlir::MlirOptMain(int, char**, llvm::StringRef, mlir::DialectRegistry&) (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x4357526)
#25 0x000055f8213e104b main (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x152304b)
#26 0x00007fa8158c0083 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24083)
#27 0x000055f82145371e _start (/home/yqiu054/circt/llvm/build/bin/mlir-opt+0x159571e)
Aborted (core dumped)